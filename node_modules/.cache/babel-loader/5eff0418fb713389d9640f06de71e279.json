{"ast":null,"code":"var _jsxFileName = \"/Users/yasmeen/WebstormProjects/mood-frontend/src/pages/CreateMoodPage.js\",\n    _s = $RefreshSig$();\n\n// Import dependencies\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddEntryPage() {\n  _s();\n\n  const history = useHistory();\n  const [mood, setMood] = useState('Like A Superstar');\n  const [note, setNote] = useState('');\n  const [date, setDate] = useState('');\n\n  const addEntry = async () => {\n    const newEntry = {\n      mood,\n      note,\n      date\n    };\n    const response = await fetch('/entries', {\n      method: 'POST',\n      body: JSON.stringify(newEntry),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 201) {\n      alert(\"That's a good rant, hope you feeling refreshed!\");\n    } else {\n      alert(`Entry not added, status code = ${response.status}`);\n    } // Return to home page\n\n\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add your Gains\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mood\",\n          children: \"Mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"mood\" // value={unit}\n          ,\n          onChange: e => setMood(e.target.value),\n          required: \"required\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Like A Superstar\",\n            children: \"Like A Superstar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Good\",\n            children: \"Good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Meh\",\n            children: \"Meh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bite Me\",\n            children: \"Bite Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note\",\n          children: \"Type your Feelings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"note\",\n          type: \"text\",\n          placeholder: \"Grow up here\",\n          value: note,\n          onChange: e => setNote(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          placeholder: \"mm-dd-yyyy\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEntry,\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddEntryPage, \"IQNPLgzQk8+GQp7MH7zbHAjFaGU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddEntryPage;\n;\nexport default AddEntryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEntryPage\");","map":{"version":3,"names":["React","useState","useHistory","AddEntryPage","history","mood","setMood","note","setNote","date","setDate","addEntry","newEntry","response","fetch","method","body","JSON","stringify","headers","status","alert","push","e","target","value"],"sources":["/Users/yasmeen/WebstormProjects/mood-frontend/src/pages/CreateMoodPage.js"],"sourcesContent":["// Import dependencies\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddEntryPage() {\r\n\r\n  const history = useHistory();\r\n  const [mood, setMood] = useState('Like A Superstar');\r\n  const [note, setNote] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n\r\n  const addEntry = async () => {\r\n    const newEntry = {mood,note,date};\r\n\r\n    const response = await fetch('/entries', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newEntry),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (response.status === 201) {\r\n      alert(\"That's a good rant, hope you feeling refreshed!\");\r\n    } else {\r\n      alert(`Entry not added, status code = ${response.status}`);\r\n    }\r\n    // Return to home page\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <article>\r\n    <h2>Add your Gains</h2>\r\n\r\n        <fieldset>\r\n            <label htmlFor=\"mood\">Mood</label>\r\n            <select id=\"mood\"\r\n                // value={unit}\r\n                    onChange={e => setMood(e.target.value)}\r\n                    required=\"required\"\r\n            >\r\n                <option value=\"Like A Superstar\">Like A Superstar</option>\r\n                <option value=\"Good\">Good</option>\r\n                <option value=\"Meh\">Meh</option>\r\n                <option value=\"Bite Me\">Bite Me</option>\r\n            </select>\r\n\r\n          <label htmlFor=\"note\">Type your Feelings</label>\r\n          <input id=\"note\"\r\n            type=\"text\"\r\n            placeholder=\"Grow up here\"\r\n            value={note}\r\n            onChange={e => setNote(e.target.value)}\r\n            required\r\n          /> <br/>\r\n\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input id=\"date\"\r\n            type=\"date\"\r\n            placeholder=\"mm-dd-yyyy\"\r\n            value={date}\r\n            onChange={e => setDate(e.target.value)}\r\n            required\r\n          /> <br/>\r\n\r\n            <button onClick={addEntry}> Add </button>\r\n        </fieldset>\r\n        </article>\r\n        </>\r\n  );\r\n\r\n};\r\n\r\nexport default AddEntryPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}