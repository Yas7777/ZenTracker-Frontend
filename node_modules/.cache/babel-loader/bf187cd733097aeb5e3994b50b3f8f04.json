{"ast":null,"code":"var _jsxFileName = \"/Users/yasmeen/WebstormProjects/mood-frontend/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\n// Import dependencies\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EntryTable from '../components/MoodTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomePage(_ref) {\n  _s();\n\n  let {\n    setEntryToEdit\n  } = _ref;\n  const history = useHistory();\n  const [entries, setEntries] = useState([]); // RETRIEVE the list of moods\n\n  const loadEntries = async () => {\n    const response = await fetch('/entries');\n    const data = await response.json();\n    setEntries(data);\n  }; // Update a mood\n\n\n  const onEdit = entry => {\n    setEntryToEdit(entry);\n    history.push('/edit');\n  }; // Delete a mood\n\n\n  const onDelete = async _id => {\n    // Make a DELETE request\n    const response = await fetch(`/entries/${_id}`, {\n      method: 'DELETE'\n    });\n\n    if (response.status === 204) {\n      const getResponse = await fetch('/entries');\n      const entries = await getResponse.json();\n      setEntries(entries);\n    } else {\n      console.error(`Failed to delete mood with _id ${_id} with status \\\n        code = ${response.status}`);\n    }\n  }; // LOAD the mood\n\n\n  useEffect(() => loadEntries(), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zen Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntryTable, {\n      entries: entries,\n      onDelete: onDelete,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"WDj/TUvP9sYl40V/EEtn+LzSvao=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\n;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","EntryTable","HomePage","setEntryToEdit","history","entries","setEntries","loadEntries","response","fetch","data","json","onEdit","entry","push","onDelete","_id","method","status","getResponse","console","error"],"sources":["/Users/yasmeen/WebstormProjects/mood-frontend/src/pages/HomePage.js"],"sourcesContent":["// Import dependencies\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport EntryTable from '../components/MoodTable';\r\n\r\nfunction HomePage({ setEntryToEdit }) {\r\n  const history = useHistory();\r\n  const [entries, setEntries] = useState([]);\r\n\r\n// RETRIEVE the list of moods\r\n  const loadEntries = async () => {\r\n    const response = await fetch('/entries');\r\n    const data = await response.json();\r\n    setEntries(data);\r\n  }\r\n\r\n// Update a mood\r\n  const onEdit = entry => {\r\n    setEntryToEdit(entry);\r\n    history.push('/edit');\r\n  };\r\n\r\n\r\n// Delete a mood\r\n  const onDelete = async _id => {\r\n\r\n    // Make a DELETE request\r\n    const response = await fetch(`/entries/${_id}`, {method: 'DELETE'});\r\n    if (response.status === 204) {\r\n      const getResponse = await fetch('/entries');\r\n      const entries = await getResponse.json();\r\n      setEntries(entries);\r\n    } else {\r\n      console.error(`Failed to delete mood with _id ${_id} with status \\\r\n        code = ${response.status}`)\r\n    }\r\n  };\r\n\r\n  // LOAD the mood\r\n\r\n  useEffect(()=>loadEntries(), []);\r\n\r\n  return (\r\n    <>\r\n\r\n      <h2>Zen Summary</h2>\r\n\r\n      <EntryTable\r\n      entries={entries}\r\n      onDelete={onDelete}\r\n      onEdit={onEdit}/>\r\n      <br/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,SAASC,QAAT,OAAsC;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EACpC,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFoC,CAItC;;EACE,MAAMS,WAAW,GAAG,YAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAL,UAAU,CAACI,IAAD,CAAV;EACD,CAJD,CALoC,CAWtC;;;EACE,MAAME,MAAM,GAAGC,KAAK,IAAI;IACtBV,cAAc,CAACU,KAAD,CAAd;IACAT,OAAO,CAACU,IAAR,CAAa,OAAb;EACD,CAHD,CAZoC,CAkBtC;;;EACE,MAAMC,QAAQ,GAAG,MAAMC,GAAN,IAAa;IAE5B;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,YAAWO,GAAI,EAAjB,EAAoB;MAACC,MAAM,EAAE;IAAT,CAApB,CAA5B;;IACA,IAAIT,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,MAAMC,WAAW,GAAG,MAAMV,KAAK,CAAC,UAAD,CAA/B;MACA,MAAMJ,OAAO,GAAG,MAAMc,WAAW,CAACR,IAAZ,EAAtB;MACAL,UAAU,CAACD,OAAD,CAAV;IACD,CAJD,MAIO;MACLe,OAAO,CAACC,KAAR,CAAe,kCAAiCL,GAAI;AAC1D,iBAAiBR,QAAQ,CAACU,MAAO,EAD3B;IAED;EACF,CAZD,CAnBoC,CAiCpC;;;EAEAnB,SAAS,CAAC,MAAIQ,WAAW,EAAhB,EAAoB,EAApB,CAAT;EAEA,oBACE;IAAA,wBAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,UAAD;MACA,OAAO,EAAEF,OADT;MAEA,QAAQ,EAAEU,QAFV;MAGA,MAAM,EAAEH;IAHR;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GAjDQV,Q;UACSF,U;;;KADTE,Q;AAiDR;AAED,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}